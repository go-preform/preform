// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/entsql"
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// TestAColumns holds the columns for the "test_a" table.
	TestAColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "int4", Type: field.TypeInt32},
		{Name: "int8", Type: field.TypeInt},
		{Name: "float4", Type: field.TypeFloat32},
		{Name: "float8", Type: field.TypeFloat64},
		{Name: "bool", Type: field.TypeBool},
		{Name: "text", Type: field.TypeString},
		{Name: "time", Type: field.TypeTime},
	}
	// TestATable holds the schema information for the "test_a" table.
	TestATable = &schema.Table{
		Name:       "test_a",
		Columns:    TestAColumns,
		PrimaryKey: []*schema.Column{TestAColumns[0]},
	}
	// TestBColumns holds the columns for the "test_b" table.
	TestBColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "int4", Type: field.TypeInt32},
		{Name: "int8", Type: field.TypeInt},
		{Name: "float4", Type: field.TypeFloat32},
		{Name: "float8", Type: field.TypeFloat64},
		{Name: "bool", Type: field.TypeBool},
		{Name: "text", Type: field.TypeString},
		{Name: "time", Type: field.TypeTime},
		{Name: "a_id", Type: field.TypeInt, Nullable: true},
	}
	// TestBTable holds the schema information for the "test_b" table.
	TestBTable = &schema.Table{
		Name:       "test_b",
		Columns:    TestBColumns,
		PrimaryKey: []*schema.Column{TestBColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "test_b_test_a_test_bs",
				Columns:    []*schema.Column{TestBColumns[9]},
				RefColumns: []*schema.Column{TestAColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// TestCColumns holds the columns for the "test_c" table.
	TestCColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "int4", Type: field.TypeInt32},
		{Name: "int8", Type: field.TypeInt},
		{Name: "float4", Type: field.TypeFloat32},
		{Name: "float8", Type: field.TypeFloat64},
		{Name: "bool", Type: field.TypeBool},
		{Name: "text", Type: field.TypeString},
		{Name: "time", Type: field.TypeTime},
		{Name: "b_id", Type: field.TypeInt, Nullable: true},
	}
	// TestCTable holds the schema information for the "test_c" table.
	TestCTable = &schema.Table{
		Name:       "test_c",
		Columns:    TestCColumns,
		PrimaryKey: []*schema.Column{TestCColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "test_c_test_b_test_cs",
				Columns:    []*schema.Column{TestCColumns[9]},
				RefColumns: []*schema.Column{TestBColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		TestATable,
		TestBTable,
		TestCTable,
	}
)

func init() {
	TestATable.Annotation = &entsql.Annotation{
		Table: "test_a",
	}
	TestBTable.ForeignKeys[0].RefTable = TestATable
	TestBTable.Annotation = &entsql.Annotation{
		Table: "test_b",
	}
	TestCTable.ForeignKeys[0].RefTable = TestBTable
	TestCTable.Annotation = &entsql.Annotation{
		Table: "test_c",
	}
}
